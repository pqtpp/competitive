/**
 * DAG representing dependencies.
 * For example, this mapping means item1 depends on item2 and item3.
 * { item1: Set(item2, item3) }
 */
export declare class DAG<T> {
    private map;
    constructor();
    addNode: (node: T) => void;
    addEdge: (from: T, to: T) => void;
    /**
     * Returns Ts for each depdnent level from less dependents to more dependents.
     * i.g.)
     * - A1 depends on B
     * - A2 depends on B
     * - B depends on C1
     * - B depends on C2
     * => [
     *   [A1, A2],
     *   [B],
     *   [C1, C2]
     * ]
     */
    dependenciesForEachDepth: () => T[][];
    private ensureNode;
    private detectCyclicDependency;
}
